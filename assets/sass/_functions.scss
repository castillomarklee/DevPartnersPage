@mixin margin($top, $right, $bottom, $left) {
  margin: $top $right $bottom $left;
}

@mixin padding($top, $right, $bottom, $left) {
  padding: $top $right $bottom $left;
}

@mixin transform($transformations...) {
  -webkit-transform: $transformations;
  -moz-transform: $transformations;
  -ms-transform: $transformations;
  -o-transform: $transformations;
  transform: $transformations;
}

@mixin translateX($x) {
  -webkit-transform: translateX($x);
  -moz-transform: translateX($x);
  -ms-transform: translateX($x);
  -o-transform: translateX($x);
  transform: translateX($x);
}

@mixin translateY($y) {
  -webkit-transform: translateY($y);
  -moz-transform: translateY($y);
  -ms-transform: translateY($y);
  -o-transform: translateY($y);
  transform: translateY($y);
}

@mixin skew-y($deg) {
  -ms-transform: skewY($deg); /* IE 9 */
  -webkit-transform: skewY($deg); /* Safari */
  -moz-transform: skewY($deg);
  -o-transform: skewY($deg);
  transform: skewY($deg);
  outline: 1px solid transparent;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}
@mixin border-radius-trbl($rTopLeft, $rTopRight, $rBottomRight, $rBottomLeft) {
  -webkit-border-radius: $rTopLeft $rTopRight $rBottomRight $rBottomLeft;
  -moz-border-radius: $rTopLeft $rTopRight $rBottomRight $rBottomLeft;
  border-radius: $rTopLeft $rTopRight $rBottomRight $rBottomLeft;
}

@mixin box-shadow-o($attrs) {
  -moz-box-shadow: #{$attrs};
  -webkit-box-shadow: #{$attrs};
  box-shadow: #{$attrs};
}

@mixin box-shadow($hOffset, $vOffset, $blur, $spreadRadius, $color:#ccc) {
  -moz-box-shadow: $hOffset $vOffset $blur $spreadRadius $color;
  -webkit-box-shadow: $hOffset $vOffset $blur $spreadRadius $color;
  box-shadow: $hOffset $vOffset $blur $spreadRadius $color;
}

@mixin box-shadow-inset($hOffset, $vOffset, $blur, $spreadRadius, $color) {
  -mox-box-shadow: inset $hOffset $vOffset $blur $spreadRadius $color;
  -webkit-box-shadow: inset $hOffset $vOffset $blur $spreadRadius $color;
  box-shadow: inset $hOffset $vOffset $blur $spreadRadius $color;
}

@mixin disable-box-shadow() {
  -moz-box-shadow: none !important;
  -webkit-box-shadow: none !important;
  box-shadow: none !important;
}

@mixin transitions($transitions...) {
  -webkit-transition: $transitions;
  -moz-transition: $transitions;
  -ms-transition: $transitions;
  -o-transition: $transitions;
  transition: $transitions;
}

@mixin transition-delay($delay) {
  -webkit-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -o-transition-delay: $delay;
  transition-delay: $delay;
}

@mixin scale($scale) {
  -webkit-transform: scale($scale);
  -moz-transform: scale($scale);
  -ms-transform: scale($scale);
  -o-transform: scale($scale);
  transform: scale($scale);
}

@mixin translate3D($translateX, $translateY, $translateZ) {
  -webkit-transform: translate3d($translateX, $translateY, $translateZ);
  -moz-transform: translate3d($translateX, $translateY, $translateZ);
  -ms-transform: translate3d($translateX, $translateY, $translateZ);
  -o-transform: translate3d($translateX, $translateY, $translateZ);
  transform: translate3d($translateX, $translateY, $translateZ)
}

@mixin scaleTranslate3D($scale, $translateX, $translateY, $translateZ) {
  @include scale($scale);
  @include translate3D($translateX, $translateY, $translateZ);
}

@mixin transform-origin($yOffset, $xOffsetKeyWord) {
  -webkit-transform-origin: $yOffset $xOffsetKeyWord;
  -moz-transform-origin: $yOffset $xOffsetKeyWord;
  -o-transform-origin: $yOffset $xOffsetKeyWord;
  -ms-transform-origin: $yOffset $xOffsetKeyWord;
  transform-origin: $yOffset $xOffsetKeyWord;
}

@mixin transform-origin-1($OffsetKeyWord) {
  -webkit-transform-origin: $OffsetKeyWord;
  -moz-transform-origin: $OffsetKeyWord;
  -o-transform-origin: $OffsetKeyWord;
  -ms-transform-origin: $OffsetKeyWord;
  transform-origin: $OffsetKeyWord;
}

@mixin backface-visibility($visibility) {
  -webkit-backface-visibility: $visibility;
  -moz-backface-visibility: $visibility;
  -o-backface-visibility: $visibility;
  backface-visibility: $visibility;
}

@mixin calc($property, $expression...) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -o-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

@mixin linear-gradient($from, $to) {
  /* fall back */
  background: $from;
  background: -moz-linear-gradient(top, $from 0%, $to 100%);
  background: -webkit-gradient(left top, left bottom, $from, $to);
  background: -webkit-linear-gradient(top, $from 0%, $to 100%);
  background: -o-linear-gradient(top, $from 0%, $to 100%);
  background: -ms-linear-gradient(top, $from 0%, $to 100%);
  background: linear-gradient(to bottom, $from 0%, $to 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=$from, endColorstr=$to, GradientType=0 );
}

@mixin inline-flex () {
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -o-inline-flex;
  display: -ms-inline-flex;
  display: inline-flex;
}

@mixin flex() {
  display: -webkit-flex;
  display: -moz-flex;
  display: -o-flex;
  display: -ms-flex;
  display: flex;
}

@mixin input-placeholder {
  &::-webkit-input-placeholder { /* WebKit, Blink, Edge */
    @content;
  }
  &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    @content;
  }
  &::-moz-placeholder { /* Mozilla Firefox 19+ */
    @content;
  }
  &:-ms-input-placeholder { /* Internet Explorer 10-11 */
    @content;
  }
  &::-ms-input-placeholder { /* Microsoft Edge */
    @content;
  }
}
@mixin input-placholder-color($color) {
  ::-webkit-input-placeholder { /* WebKit, Blink, Edge */
    color: $color;
  }
  :-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color: $color;
    opacity: 1;
  }
  ::-moz-placeholder { /* Mozilla Firefox 19+ */
    color: $color;
    opacity: 1;
  }
  :-ms-input-placeholder { /* Internet Explorer 10-11 */
    color: $color;
  }
  ::-ms-input-placeholder { /* Microsoft Edge */
    color: $color;
  }
}

@mixin shape-circle($size, $color) {
  width: $size;
  height: $size;
  display: inline-block;
  background-color: $color;
  @include border-radius(50%);
}

@mixin animate($animation) {
  -webkit-animation: $animation;
  -moz-animation: $animation;
  -o-animation: $animation;
	animation: $animation;
}

@mixin animation-delay($delay) {
  -webkit-animation-delay: $delay;
  -moz-animation-delay: $delay;
  -o-animation-delay: $delay;
  animation-delay: $delay;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

@mixin perspective($perspective) {
  -webkit-perspective: $perspective;
  -moz-perspective: $perspective;
  -o-perspective: $perspective;
  perspective: $perspective;
}